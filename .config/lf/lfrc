set shell bash
set previewer ~/.config/lf/scope
set shellopts '-eu'
set ifs "\n"
set scrolloff 10
set color256
set period 1
set icons

# cmds/functions
cmd open ${{
    case $(file --mime-type $f -b) in
        image/vnd.djvu|application/pdf|application/octet-stream) setsid -f zathura $fx >/dev/null 2>&1 ;;
    	text/troff) man ./ $f ;;
        text/html) $BROWSER $fx ;;
        text/*) $EDITOR $fx ;;
	    image/x-xcf|image/svg+xml) setsid gimp $f >/dev/null 2>&1 & ;;
	    image/*) rotdir $f | setsid sxiv -ai >/dev/null 2>&1 & ;;
	    audio/*) mpv --input-ipc-server=/tmp/mpvsoc$(date +%%s) $f ;;
	    video/*) setsid mpv --volume=130 --input-ipc-server=/tmp/mpvsoc$(date +%%s) $f -quiet >/dev/null 2>&1 & ;;
             *) for f in $fx; do setsid $OPENER $f >/dev/null 2>&1 & done ;;
    esac
}}

cmd bulk-rename ${{
    vidir
}}

cmd moveto ${{
	set -f
	clear; echo "Move to where?"
	dest="$(cut -d'	' -f2- ~/.config/shortcuts/bmdirs | fzf)" &&
	eval mv -iv $fx $dest &&
	notify-send "File(s) moved." "File(s) moved to $dest."
}}

cmd copyto ${{
	set -f
	clear; echo "Copy to where?"
	dest="$(cut -d'	' -f2- ~/.config/shortcuts/bmdirs | fzf)" &&
	eval cp -ivr $fx $dest &&
	notify-send "File(s) copied." "File(s) copies to $dest."
}}

# Bindings
map J $lf -remote "send $id cd $(cut -d'	' -f2 ~/.config/shortcuts/bmdirs | fzf)"
map D trash
map C copyto
map M moveto

map V push :glob-select<space>
map t push $$EDITOR<space>

cmd fullrename %[ -e $1 ] && printf "file exists" || mv $f $1
map A rename # at the very end
map r push :fullrename<space>
map I push A<c-a> # at the very beginning
map i push A<a-b><a-b><a-f> # before extention
map cw push A<a-b><a-b><a-f><c-u> # change before extention
map ce push A<a-b><a-d> # change before extention

# map a push A<a-b> # after extention

map a push %mkdir<space>
map br bulk-rename
map <enter> shell
map R reload
map x sxiv_list
map X !extract $f
map o &mimeopen $f
map O $mimeopen --ask $f

cmd sxiv_list ${{
    set -f
    sxiv -r $fx &
}}

%mkdir -p ~/.local/share/trash
cmd trash ${{
    set -f
    mv -f $fx ~/.local/share/trash && exit
    cp -rf $fx ~/.local/share/trash && rm -rf $fx &
}}

# compress current file or selected files with tar and gunzip
cmd tar ${{
    set -f
    mkdir $1
    cp -r $fx $1
    tar czf $1.tar.gz $1
    rm -rf $1
}}

# compress current file or selected files with zip
cmd zip ${{
    set -f
    mkdir $1
    cp -r $fx $1
    zip -r $1.zip $1
    rm -rf $1
}}

map c
map U :clear
# -------- START --------
# -------- SHORTCUTS --------
map gh :cd ~/
map gd :cd ~/Documents
map gD :cd ~/Downloads
map gpp :cd ~/Pictures
map gcf :cd ~/.config
map gxd :cd ~/.local/share
map gxdm :cd ~/.local/share/mutt-wizard
map gxdd :cd ~/.local/share/dmenu
map gxds :cd ~/.local/share/st
map gxc :cd ~/.cache
map gsc :cd ~/.local/bin
map gso :cd ~/.local/share/sounds
map gt :cd ~/.local/share/trash
map gfo :cd ~/.local/share/fonts
map ge :cd /etc
map gw :cd ~/Pictures/wallpapers
map bd $$EDITOR ~/.config/shortcuts/bmdirs
map bf $$EDITOR ~/.config/shortcuts/bmfiles
map cfa $$EDITOR ~/.config/shell/aliases
map cfb $$EDITOR ~/.bashrc
map cfd $$EDITOR ~/.config/dunst/dunstrc
map cfB $$EDITOR ~/.local/share/dwmblocks/config.h
map cfi $$EDITOR ~/.local/share/dwm/config.h
map cfk $$EDITOR ~/.config/sxiv/exec/key-handler
map cfl $$EDITOR ~/.config/lf/lfrc
map cfM $$EDITOR ~/.config/mpd/mpd.conf
map cfm $$EDITOR ~/.local/share/mutt-wizard/share/mutt-wizard.muttrc
map cfn $$EDITOR ~/.config/newsboat/config
map cfp $$EDITOR ~/.profile
map cfs $$EDITOR ~/.config/sxhkd/sxhkdrc
map cfu $$EDITOR ~/.config/newsboat/urls
map cfv $$EDITOR ~/.config/nvim/init.vim
map cfw $$EDITOR ~/.config/via/websites
map cfX $$EDITOR ~/.config/X11/xinitrc
map cfx $$EDITOR ~/.config/X11/Xresources
map cfz $$EDITOR ~/.config/zathura/zathurarc
# -------- SHORTCUTS --------
